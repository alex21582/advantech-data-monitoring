{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": 2,
  "links": [],
  "panels": [
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 18,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "fieldMinMax": false,
              "mappings": [
                {
                  "options": {
                    "0": {
                      "color": "green",
                      "index": 0,
                      "text": "OK"
                    },
                    "1": {
                      "color": "dark-orange",
                      "index": 1,
                      "text": "Battery Low"
                    },
                    "2": {
                      "color": "dark-yellow",
                      "index": 2,
                      "text": "RTC Low"
                    },
                    "3": {
                      "color": "red",
                      "index": 3,
                      "text": "Battery,  RTC Low"
                    },
                    "4": {
                      "color": "semi-dark-red",
                      "index": 4,
                      "text": "Restart due to RF fatal error"
                    }
                  },
                  "type": "value"
                },
                {
                  "options": {
                    "from": 8,
                    "result": {
                      "color": "dark-red",
                      "index": 5,
                      "text": "Sensor error"
                    },
                    "to": 15
                  },
                  "type": "range"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 0,
            "y": 1
          },
          "id": 20,
          "maxDataPoints": 1000,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "center",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Value$/",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.0.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P5697886F9CA74929"
              },
              "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Device_Events\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value\n    }))\n  |> yield(name: \"mean\")",
              "refId": "A"
            }
          ],
          "title": "Device Status",
          "transparent": true,
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "fieldMinMax": false,
              "mappings": [
                {
                  "options": {
                    "1": {
                      "color": "light-green",
                      "index": 0,
                      "text": "Power Line"
                    },
                    "2": {
                      "color": "dark-yellow",
                      "index": 1,
                      "text": "Battery"
                    },
                    "4": {
                      "color": "dark-green",
                      "index": 2,
                      "text": "Solar Panels"
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 3,
            "y": 1
          },
          "id": 21,
          "maxDataPoints": 1000,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Value$/",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.0.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P5697886F9CA74929"
              },
              "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Device_PowerSrc\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value\n    }))\n  |> yield(name: \"mean\")",
              "refId": "A"
            }
          ],
          "title": "Power Source",
          "transparent": true,
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 34,
                "gradientMode": "opacity",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "smooth",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "Battery",
              "fieldMinMax": false,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "volt"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 6,
            "x": 6,
            "y": 1
          },
          "id": 22,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P5697886F9CA74929"
              },
              "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Device_BatteryVolt\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value / 1000.0,\n  }))\n  |> yield(name: \"last\")",
              "refId": "A"
            }
          ],
          "title": "Battary Volt",
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 34,
                "gradientMode": "opacity",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "smooth",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "Frequency",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "rotmhz"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 12,
            "x": 12,
            "y": 1
          },
          "id": 12,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P5697886F9CA74929"
              },
              "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"uplink\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"freq\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
              "refId": "A"
            }
          ],
          "title": "Frequency",
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 6,
            "x": 0,
            "y": 7
          },
          "id": 13,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": true,
            "textMode": "value",
            "wideLayout": true
          },
          "pluginVersion": "11.0.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P5697886F9CA74929"
              },
              "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"uplink\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"fcnt\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
              "refId": "A"
            }
          ],
          "title": "FCNT",
          "transparent": true,
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": [],
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 6,
            "x": 6,
            "y": 7
          },
          "id": 23,
          "options": {
            "displayLabels": [
              "value",
              "percent"
            ],
            "legend": {
              "displayMode": "list",
              "placement": "right",
              "showLegend": true
            },
            "pieType": "donut",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.0.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P5697886F9CA74929"
              },
              "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"uplink\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"fcnt\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: if r._field == \"fcnt\" then \"FCNT\" else \"Loss\"\n  }))\n  |> yield(name: \"last\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P5697886F9CA74929"
              },
              "hide": false,
              "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"uplink\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"packet_loss\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value,\n      _field: if r._field == \"packet_loss\" then \"Loss\" else \"FCNT\"\n  }))\n  |> yield(name: \"last\")",
              "refId": "B"
            }
          ],
          "title": "FCNT",
          "transparent": true,
          "type": "piechart"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "max": 50,
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": -80
                  }
                ]
              },
              "unit": "dBm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 3,
            "x": 12,
            "y": 7
          },
          "id": 11,
          "options": {
            "minVizHeight": 75,
            "minVizWidth": 75,
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": true,
            "sizing": "auto",
            "text": {}
          },
          "pluginVersion": "11.0.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P5697886F9CA74929"
              },
              "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"uplink\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"lsnr\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
              "refId": "A"
            }
          ],
          "title": "LSNR",
          "transparent": true,
          "type": "gauge"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 52,
                "gradientMode": "opacity",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "LSNR",
              "fieldMinMax": false,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "dbm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 9,
            "x": 15,
            "y": 7
          },
          "id": 34,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P5697886F9CA74929"
              },
              "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"uplink\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"lsnr\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
              "refId": "A"
            }
          ],
          "title": "LSNR",
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "max": 0,
              "min": -120,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "semi-dark-red",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": -75
                  }
                ]
              },
              "unit": "dBm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 3,
            "x": 12,
            "y": 11
          },
          "id": 10,
          "options": {
            "minVizHeight": 75,
            "minVizWidth": 75,
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": true,
            "sizing": "auto",
            "text": {}
          },
          "pluginVersion": "11.0.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P5697886F9CA74929"
              },
              "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"uplink\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"rssi\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
              "refId": "A"
            }
          ],
          "title": "RSSI",
          "transparent": true,
          "type": "gauge"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "smooth",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "displayName": "RSSI",
              "mappings": [],
              "max": 0,
              "min": -120,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "semi-dark-red",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": -75
                  }
                ]
              },
              "unit": "dBm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 9,
            "x": 15,
            "y": 11
          },
          "id": 35,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.0.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P5697886F9CA74929"
              },
              "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"uplink\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"rssi\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
              "refId": "A"
            }
          ],
          "title": "RSSI",
          "transparent": true,
          "type": "timeseries"
        }
      ],
      "repeat": "sensor",
      "repeatDirection": "h",
      "title": "Device",
      "type": "row"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 24,
      "panels": [],
      "title": "Temperature",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "fieldMinMax": false,
          "mappings": [
            {
              "options": {
                "0": {
                  "color": "green",
                  "index": 0,
                  "text": "OK"
                },
                "1": {
                  "color": "dark-red",
                  "index": 1,
                  "text": "Sensor failed"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 3,
        "x": 0,
        "y": 2
      },
      "id": 26,
      "maxDataPoints": 1000,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Value$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"TempHumi_Status\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Sensor Status",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "fieldMinMax": false,
          "mappings": [
            {
              "options": {
                "0": {
                  "color": "green",
                  "index": 0,
                  "text": "OK"
                },
                "1": {
                  "color": "dark-red",
                  "index": 1,
                  "text": "High Alarm"
                },
                "2": {
                  "color": "dark-purple",
                  "index": 2,
                  "text": "Low Alarm"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 3,
        "x": 3,
        "y": 2
      },
      "id": 27,
      "maxDataPoints": 1000,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Value$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"TempHumi_Event\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Alarm Status",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 6,
        "y": 2
      },
      "id": 29,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Temperature$/",
          "values": false
        },
        "showPercentChange": true,
        "textMode": "value",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"TempHumi_SenVal\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value / 1000.0,\n    _field: if r._field == \"TempHumi_SenVal\" then \"Temperature\" \n    else \"\"\n  }))\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Temperature",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic-by-name",
            "seriesBy": "last"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 78,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "always",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 12,
        "x": 12,
        "y": 2
      },
      "id": 30,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull",
            "min",
            "max",
            "mean",
            "variance",
            "range"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"TempHumi_SenVal\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value / 1000.0,\n    _field: if r._field == \"TempHumi_SenVal\" then \"Temperature\" \n    else \"\"\n  }))\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Temperature",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 46,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineWidth": 1,
            "spanNulls": false
          },
          "displayName": "Status",
          "fieldMinMax": false,
          "mappings": [
            {
              "options": {
                "0": {
                  "color": "green",
                  "index": 0,
                  "text": "OK"
                },
                "1": {
                  "color": "dark-red",
                  "index": 1,
                  "text": "High Alarm"
                },
                "2": {
                  "color": "dark-blue",
                  "index": 2,
                  "text": "Low Alarm"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 28,
      "options": {
        "alignValue": "center",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mergeValues": false,
        "rowHeight": 0.7,
        "showValue": "auto",
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"TempHumi_Event\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Temperature Event",
      "transparent": true,
      "type": "state-timeline"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 11
      },
      "id": 4,
      "panels": [],
      "title": "Accelerometer",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "fieldMinMax": false,
          "mappings": [
            {
              "options": {
                "0": {
                  "color": "green",
                  "index": 0,
                  "text": "OK"
                },
                "1": {
                  "color": "dark-red",
                  "index": 1,
                  "text": "High Alarm"
                },
                "2": {
                  "color": "dark-purple",
                  "index": 2,
                  "text": "Low Alarm"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 3,
        "x": 0,
        "y": 12
      },
      "id": 31,
      "maxDataPoints": 1000,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Value$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Accelerometer_X-Axis_SenEvent\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "X-Axis Alarm Status",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "fieldMinMax": false,
          "mappings": [
            {
              "options": {
                "0": {
                  "color": "green",
                  "index": 0,
                  "text": "OK"
                },
                "1": {
                  "color": "dark-red",
                  "index": 1,
                  "text": "High Alarm"
                },
                "2": {
                  "color": "dark-purple",
                  "index": 2,
                  "text": "Low Alarm"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 3,
        "x": 3,
        "y": 12
      },
      "id": 32,
      "maxDataPoints": 1000,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Value$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Accelerometer_Y-Axis_SenEvent\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Y-Axis Alarm Status",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "fieldMinMax": false,
          "mappings": [
            {
              "options": {
                "0": {
                  "color": "green",
                  "index": 0,
                  "text": "OK"
                },
                "1": {
                  "color": "dark-red",
                  "index": 1,
                  "text": "High Alarm"
                },
                "2": {
                  "color": "dark-purple",
                  "index": 2,
                  "text": "Low Alarm"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 3,
        "x": 6,
        "y": 12
      },
      "id": 33,
      "maxDataPoints": 1000,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Value$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Accelerometer_Z-Axis_SenEvent\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Z-Axis Alarm Status",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "High Alarm Status of Velocity RMS",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 46,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineWidth": 1,
            "spanNulls": false
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "color": "green",
                  "index": 2,
                  "text": "Ok"
                },
                "1": {
                  "color": "dark-red",
                  "index": 0,
                  "text": "High Alarm"
                },
                "2": {
                  "color": "red",
                  "index": 1,
                  "text": "Sensor Error"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 15,
        "x": 9,
        "y": 12
      },
      "id": 6,
      "options": {
        "alignValue": "center",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mergeValues": false,
        "rowHeight": 0.7,
        "showValue": "auto",
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Accelerometer_X-Axis_SenEvent\" or r[\"_field\"] == \"Accelerometer_Y-Axis_SenEvent\" or r[\"_field\"] == \"Accelerometer_Z-Axis_SenEvent\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value,\n      _field: if r._field == \"Accelerometer_X-Axis_SenEvent\" then \"X-Axis High Alarm\" \n      else if r._field == \"Accelerometer_Y-Axis_SenEvent\" then \"Y-Axis High Alarm\" \n      else \"Z-Axis High Alarm\"\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Alarm History",
      "transparent": true,
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "OA Value of Vibration Velocity обозначает интегральное значение или общий уровень вибрации, который суммирует вклад всех частот вибрации в пределах определенного диапазона. Это усредненное значение, которое представляет общую вибрационную активность оборудования.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "mm/s"
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "Accelerometer_X-Axis_OAVelocity {host=\"7c997a0674a0\", topic=\"Advantech/FF9360DB/data\"}"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 18
      },
      "id": 3,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "min",
            "max",
            "mean",
            "variance",
            "range"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "timezone": [
          "Asia/Samarkand"
        ],
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Accelerometer_X-Axis_OAVelocity\" \n  or r[\"_field\"] == \"Accelerometer_Y-Axis_OAVelocity\" \n  or r[\"_field\"] == \"Accelerometer_Z-Axis_OAVelocity\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value / 100.0,\n      _field: if r._field == \"Accelerometer_X-Axis_OAVelocity\" then \"X-Axis OAVelocity\" \n      else if r._field == \"Accelerometer_Y-Axis_OAVelocity\" then \"Y-Axis OAVelocity\" \n      else \"Z-Axis OAVelocity\"\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Velocity RMS",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "Peak Value of Acceleratin обозначает наибольшее значение виброускорения, зарегистрированное в течение определенного периода времени. Это наибольшая амплитуда вибрации в данной временной точке.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "accG"
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "Accelerometer_X-Axis_OAVelocity {host=\"7c997a0674a0\", topic=\"Advantech/FF9360DB/data\"}"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 27
      },
      "id": 5,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "min",
            "max",
            "mean",
            "variance",
            "range"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "timezone": [
          "Asia/Samarkand"
        ],
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Accelerometer_X-Axis_Peakmg\" or r[\"_field\"] == \"Accelerometer_Y-Axis_Peakmg\" \n  or r[\"_field\"] == \"Accelerometer_Z-Axis_Peakmg\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value / 1000.0,\n      _field: if r._field == \"Accelerometer_X-Axis_Peakmg\" then \"X-Axis Acceleration Peak\" \n      else if r._field == \"Accelerometer_Y-Axis_Peakmg\" then \"Y-Axis Acceleration Peak\" \n      else \"Z-Axis Acceleration Peak\"\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Acceleration Peak",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "RMS of Acceleration - среднеквадратичное значение виброускорения используются для получения более стабильных и представительных показателей вибрационной активности. В отличие от пиковых значений, которые могут быть вызваны кратковременными аномалиями, RMS учитывает все измерения за период времени, что делает его более устойчивым к случайным колебаниям.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "accG"
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "Accelerometer_X-Axis_OAVelocity {host=\"7c997a0674a0\", topic=\"Advantech/FF9360DB/data\"}"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 36
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "min",
            "max",
            "mean",
            "variance",
            "range"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "timezone": [
          "Asia/Samarkand"
        ],
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Accelerometer_X-Axis_RMSmg\" or r[\"_field\"] == \"Accelerometer_Y-Axis_RMSmg\" or r[\"_field\"] == \"Accelerometer_Z-Axis_RMSmg\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value / 1000.0,\n      _field: if r._field == \"Accelerometer_X-Axis_RMSmg\" then \"X-Axis Acceleration RMS\" \n      else if r._field == \"Accelerometer_Y-Axis_RMSmg\" then \"Y-Axis Acceleration RMS \" \n      else \"Z-Axis Acceleration RMS\"\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Acceleration RMS",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 45
      },
      "id": 8,
      "panels": [],
      "title": "Accelerometer statistics",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "Peak-to-Peak Displacement - это разница между наибольшим положительным и наибольшим отрицательным отклонением вибрационного сигнала. Этот параметр измеряет полный диапазон движения объекта за один цикл колебания. Он выражается в единицах длины, таких как микрометры (µm).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 33,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "micrometr"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 46
      },
      "id": 17,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull",
            "min",
            "max",
            "mean",
            "variance",
            "range"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Accelerometer_X-Axis_Peak-to-Peak_Displacement\" \n  or r[\"_field\"] == \"Accelerometer_Y-Axis_Peak-to-Peak_Displacement\" \n  or r[\"_field\"] == \"Accelerometer_Z-Axis_Peak-to-Peak_Displacement\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value / 100.0,\n      _field: if r._field == \"Accelerometer_X-Axis_Peak-to-Peak_Displacement\" then \"X-Axis Peak-to-Peak Displacement\" \n      else if r._field == \"Accelerometer_Y-Axis_Peak-to-Peak_Displacement\" then \"Y-Axis Peak-to-Peak Displacement\" \n      else \"Z-Axis Peak-to-Peak Displacement\"\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Peak-to-Peak Displacement",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "Kurtosis - это мера \"остроты\" или \"пикообразности\" распределения данных. Он показывает, насколько сильно распределение отличается от нормального распределения в терминах высоты и тяжёлых хвостов.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 24,
        "x": 0,
        "y": 55
      },
      "id": 9,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Accelerometer_X-Axis_Kurtosis\" \n  or r[\"_field\"] == \"Accelerometer_Y-Axis_Kurtosis\" \n  or r[\"_field\"] == \"Accelerometer_Z-Axis_Kurtosis\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value / 100.0,\n      _field: if r._field == \"Accelerometer_X-Axis_Kurtosis\" then \"X-Axis Kurtosis\" \n      else if r._field == \"Accelerometer_Y-Axis_Kurtosis\" then \"Y-Axis Kurtosis\" \n      else \"Z-Axis Kurtosis\"\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Kurtosis",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "Skewness - это статистический показатель, который описывает асимметрию распределения данных относительно его среднего значения. В контексте вибрационного анализа и мониторинга состояния оборудования, смещённость помогает выявлять отклонения в вибрационном сигнале, что может свидетельствовать о механических проблемах.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic-by-name"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 24,
        "x": 0,
        "y": 60
      },
      "id": 14,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Accelerometer_X-Axis_Skewness\" \n  or r[\"_field\"] == \"Accelerometer_Y-Axis_Skewness\" \n  or r[\"_field\"] == \"Accelerometer_Z-Axis_Skewness\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value / 100.0,\n      _field: if r._field == \"Accelerometer_X-Axis_Skewness\" then \"X-Axis Skewness\" \n      else if r._field == \"Accelerometer_Y-Axis_Skewness\" then \"Y-Axis Skewness\" \n      else \"Z-Axis Skewness\"\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Skewness - ",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "Crest Factor - это отношение максимального (пикового) значения сигнала к его среднеквадратичному (RMS) значению. Он рассчитывается по формуле:\n Crest Factor = Peak Value / RMS Value.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 24,
        "x": 0,
        "y": 65
      },
      "id": 15,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Accelerometer_X-Axis_CrestFactor\" \n  or r[\"_field\"] == \"Accelerometer_Y-Axis_CrestFactor\" \n  or r[\"_field\"] == \"Accelerometer_Z-Axis_CrestFactor\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value / 100.0,\n      _field: if r._field == \"Accelerometer_X-Axis_CrestFactor\" then \"X-Axis CrestFactor\" \n      else if r._field == \"Accelerometer_Y-Axis_CrestFactor\" then \"Y-Axis CrestFactor\" \n      else \"Z-Axis CrestFactor\"\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Crest Factor",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "Стандартное отклонение — это важный статистический показатель, который измеряет разброс значений вокруг среднего значения. В контексте вибрационного анализа и мониторинга состояния оборудования, стандартное отклонение помогает оценить стабильность вибрационного сигнала и выявить отклонения от нормальной работы.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 24,
        "x": 0,
        "y": 70
      },
      "id": 16,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"main_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Advantech\")\n  |> filter(fn: (r) => r[\"tag\"] == \"${sensor}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Accelerometer_X-Axis_Deviation\" \n  or r[\"_field\"] == \"Accelerometer_Y-Axis_Deviation\" \n  or r[\"_field\"] == \"Accelerometer_Z-Axis_Deviation\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _value: r._value / 100.0,\n      _field: if r._field == \"Accelerometer_X-Axis_Deviation\" then \"X-Axis Deviation\" \n      else if r._field == \"Accelerometer_Y-Axis_Deviation\" then \"Y-Axis Deviation\" \n      else \"Z-Axis Deviation\"\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Deviation",
      "type": "stat"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "FF9360DB",
          "value": "FF9360DB"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
        "definition": "import \"influxdata/influxdb/schema\"\nschema.tagValues(bucket: \"main_data\", tag: \"tag\")",
        "hide": 0,
        "includeAll": false,
        "label": "Sensor ID",
        "multi": false,
        "name": "sensor",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\nschema.tagValues(bucket: \"main_data\", tag: \"tag\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-15m",
    "to": "now"
  },
  "timeRangeUpdatedDuringEditOrView": false,
  "timepicker": {},
  "timezone": "browser",
  "title": "WISE-2410",
  "uid": "cdpquhkt3ufb4f",
  "version": 164,
  "weekStart": "monday"
}
